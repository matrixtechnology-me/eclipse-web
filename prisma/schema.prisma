generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  Cpf  @map(name: "cpf")
  Cnpj @map(name: "cnpj")
}

model Document {
  id        String       @id @default(uuid()) @map("_id")
  type      DocumentType
  number    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  name      String
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Customer {
  id          String   @id @default(uuid()) @map("_id")
  firstName   String
  lastName    String
  phoneNumber String
  status      String
  addresses   String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  loans Loan[]
}

model Address {
  id           String   @id @default(uuid()) @map("_id")
  street       String
  houseNumber  String
  neighborhood String
  zipCode      String
  city         String
  state        String
  complement   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model LoanCategory {
  id          String   @id @default(uuid()) @map("_id")
  name        String
  description String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("loan_categories")
}

model Loan {
  id         String   @id @default(uuid()) @map("_id")
  status     String   @default("pending")
  customerId String
  categoryId String?
  customer   Customer @relation(fields: [customerId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("loans")
}

model Notification {
  id        String   @id @default(uuid()) @map("_id")
  type      String
  subject   String
  body      String
  read      Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("notifications")
}
